API Documentation
==================

Base URL: http://localhost:3000/api

Endpoints:

1. GET /api/tasks
   - Description: Retrieve a list of all tasks.
   - Response: Array of task objects.
   - Example Response:
     [
       {
         "id": "1",
         "title": "Sample Task",
         "description": "Description of the task",
         "status": "Pending",
         "created_at": "2025-01-01T12:00:00Z",
         "updated_at": "2025-01-01T12:00:00Z"
       }
     ]

2. GET /api/tasks/:id
   - Description: Retrieve a specific task by its ID.
   - Parameters: `id` (string) - Task ID.
   - Response: Task object or 404 error if not found.
   - Example Response:
     {
       "id": "1",
       "title": "Sample Task",
       "description": "Description of the task",
       "status": "Pending",
       "created_at": "2025-01-01T12:00:00Z",
       "updated_at": "2025-01-01T12:00:00Z"
     }

3. POST /api/createTask
   - Description: Create a new task.
   - Request Body: JSON object containing `id`, `title`, `description`, and `status`.
   - Response: The created task object or 400 error for invalid input.
   - Example Request Body:
     {
       "id": "2",
       "title": "New Task",
       "description": "Details about the new task",
       "status": "In Progress"
     }
   - Example Response:
     {
       "id": "2",
       "title": "New Task",
       "description": "Details about the new task",
       "status": "In Progress",
       "created_at": "2025-01-01T12:05:00Z",
       "updated_at": "2025-01-01T12:05:00Z"
     }

4. PUT /api/updateTask/:id
   - Description: Update an existing task by its ID.
   - Parameters: `id` (string) - Task ID.
   - Request Body: JSON object containing any of `title`, `description`, or `status`.
   - Response: The updated task object or 404 error if not found.
   - Example Request Body:
     {
       "title": "Updated Task Title",
       "status": "Completed"
     }
   - Example Response:
     {
       "id": "2",
       "title": "Updated Task Title",
       "description": "Details about the new task",
       "status": "Completed",
       "created_at": "2025-01-01T12:05:00Z",
       "updated_at": "2025-01-01T12:10:00Z"
     }


5. DELETE /api/deleteTasks/:id
   - Description: Delete a task by its ID.
   - Parameters: `id` (string) - Task ID.
   - Response: 404 error if not found or 400 error if duplicate IDs are detected.
